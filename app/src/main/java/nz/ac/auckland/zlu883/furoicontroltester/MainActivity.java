package nz.ac.auckland.zlu883.furoicontroltester;import android.bluetooth.BluetoothAdapter;import android.bluetooth.BluetoothDevice;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.View;import android.view.Menu;import android.view.MenuItem;import android.widget.EditText;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.TextView;import android.widget.ToggleButton;import java.util.Set;public class MainActivity extends AppCompatActivity {    RobotControllerParrot robotController;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)                        .setAction("Action", null).show();            }        });        robotController = RobotControllerParrot.getInstance();    }    @Override    protected void onResume() {        super.onResume();        robotController.btConnect();    }    @Override    protected void onStop() {        super.onStop();        robotController.btDisconnect();    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }    public void setWheelMovement(View view) {        String leftVel = ((EditText)findViewById(R.id.leftVel)).getText().toString();        String leftDur = ((EditText)findViewById(R.id.leftDur)).getText().toString();        String rightVel = ((EditText)findViewById(R.id.rightVel)).getText().toString();        String rightDur = ((EditText)findViewById(R.id.rightDur)).getText().toString();        robotController.setMotorVelocity(Integer.parseInt(leftVel), Integer.parseInt(leftDur),                Integer.parseInt(rightVel), Integer.parseInt(rightDur));    }    public void setWingMovement(View view) {        String targetAngle = ((EditText)findViewById(R.id.targetPos)).getText().toString();        String angVel = ((EditText)findViewById(R.id.angVel)).getText().toString();        int side = 0;        if (((RadioButton)findViewById(R.id.left)).isChecked())            side = robotController.LEFT;        if (((RadioButton)findViewById(R.id.right)).isChecked())            side = robotController.RIGHT;        robotController.setWingMovement(side, Integer.parseInt(targetAngle), Integer.parseInt(angVel));    }    public void setLED(View view) {        boolean a = false, b = false, c = false, d = false, e = false, f = false;        if (((ToggleButton)findViewById(R.id.wingBlue)).isChecked())            a = true;        else            a = false;        if (((ToggleButton)findViewById(R.id.wingGreen)).isChecked())            b = true;        else            b = false;        if (((ToggleButton)findViewById(R.id.wingRed)).isChecked())            c = true;        else            c = false;        if (((ToggleButton)findViewById(R.id.headBlue)).isChecked())            d = true;        else            d = false;        if (((ToggleButton)findViewById(R.id.headGreen)).isChecked())            e = true;        else            e = false;        if (((ToggleButton)findViewById(R.id.headRed)).isChecked())            f = true;        else            f = false;        robotController.setLedColor(a, b, c, d, e, f);    }    public void setEncoderTransmission(View view) {        boolean enable = false;        if (((RadioButton)findViewById(R.id.encoderEnabled)).isChecked())            enable = true;        else            enable = false;        robotController.setEncoderTransmission(enable);    }    public void requestTouchSensor(View view) {        TextView disp = (TextView) findViewById(R.id.touch_sensor_data);        String[] data = robotController.requestTouchSensorData();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestDistanceSensor(View view) {        TextView disp = (TextView) findViewById(R.id.distance_sensor_data);        String[] data = robotController.requestDistanceSensorData();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestCliffSensor(View view) {        TextView disp = (TextView) findViewById(R.id.cliff_sensor_data);        String[] data = robotController.requestCliffSensorData();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestBatteryInfo(View view) {        TextView disp = (TextView) findViewById(R.id.battery_info);        String[] data = robotController.requestBatteryInfo();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestEncoderCount(View view) {        TextView disp = (TextView) findViewById(R.id.encoder_count);        String[] data = robotController.requestEncoderCount();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }}