package nz.ac.auckland.zlu883.furoicontroltester;import android.bluetooth.BluetoothAdapter;import android.bluetooth.BluetoothDevice;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.View;import android.view.Menu;import android.view.MenuItem;import android.widget.EditText;import android.widget.TextView;import java.util.Set;public class MainActivity extends AppCompatActivity {    RobotControllerParrot robotController;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)                        .setAction("Action", null).show();            }        });        robotController = RobotControllerParrot.getInstance();    }    @Override    protected void onResume() {        super.onResume();        robotController.btConnect();    }    @Override    protected void onStop() {        super.onStop();        robotController.btDisconnect();    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }    public void setWheelMovement(View view) {        EditText input = (EditText) findViewById(R.id.set_wheel_movement);        String[] inputData = input.getText().toString().split(" ");        robotController.setMotorVelocity(Integer.parseInt(inputData[0]), Integer.parseInt(inputData[1]), Integer.parseInt(inputData[2]), Integer.parseInt(inputData[3]));    }    public void setWingMovement(View view) {        EditText input = (EditText) findViewById(R.id.set_wing_movement);        String[] inputData = input.getText().toString().split(" ");        int side = 0;        if (inputData[0].equals("left"))            side = robotController.LEFT;        if (inputData[0].equals("right"))            side = robotController.RIGHT;        robotController.setWingMovement(side, Integer.parseInt(inputData[1]), Integer.parseInt(inputData[2]));    }    public void setLED(View view) {        EditText input = (EditText) findViewById(R.id.set_LED);        String[] inputData = input.getText().toString().split(" ");        boolean a = false, b = false, c = false, d = false, e = false, f = false;        if (inputData[0].equals("0"))            a = false;        if (inputData[0].equals("1"))            a = true;        if (inputData[1].equals("0"))            b = false;        if (inputData[1].equals("1"))            b = true;        if (inputData[2].equals("0"))            c = false;        if (inputData[2].equals("1"))            c = true;        if (inputData[3].equals("0"))            d = false;        if (inputData[3].equals("1"))            d = true;        if (inputData[4].equals("0"))            e = false;        if (inputData[4].equals("1"))            e = true;        if (inputData[5].equals("0"))            f = false;        if (inputData[5].equals("1"))            f = true;        robotController.setLedColor(a, b, c, d, e, f);    }    public void setEncoderTransmission(View view) {        EditText input = (EditText) findViewById(R.id.set_encoder_transmission);        String[] inputData = input.getText().toString().split(" ");        boolean enable = false;        if (inputData[0].equals("enable"))            enable = true;        if (inputData[0].equals("disable"))            enable = false;        robotController.setEncoderTransmission(enable);    }    public void requestTouchSensor(View view) {        TextView disp = (TextView) findViewById(R.id.touch_sensor_data);        String[] data = robotController.requestTouchSensorData();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestDistanceSensor(View view) {        TextView disp = (TextView) findViewById(R.id.distance_sensor_data);        String[] data = robotController.requestDistanceSensorData();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestCliffSensor(View view) {        TextView disp = (TextView) findViewById(R.id.cliff_sensor_data);        String[] data = robotController.requestCliffSensorData();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestBatteryInfo(View view) {        TextView disp = (TextView) findViewById(R.id.battery_info);        String[] data = robotController.requestBatteryInfo();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }    public void requestEncoderCount(View view) {        TextView disp = (TextView) findViewById(R.id.encoder_count);        String[] data = robotController.requestEncoderCount();        String s = "";        for (int i = 0; i < data.length; i++) {            s = s + data[i] + " ";        }        disp.setText(s);    }}